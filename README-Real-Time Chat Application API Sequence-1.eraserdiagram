sequence-diagram

title Real-Time Chat Application API Sequence

// Authentication Flow
Frontend [icon: monitor] > Backend [icon: server]: POST /auth/register[color: blue]
activate Frontend
Backend > AWS RDS [icon: aws-rds]: Save user data [color: orange]
AWS RDS --> Backend: Success [color: blue]
Backend --> Frontend: Token [color: purple]
deactivate Frontend

Frontend > Backend: "POST /auth/login" [color: blue]
activate Frontend
Backend > AWS RDS: Validate credentials [color: orange]
alt [label: valid credentials, color: purple] {
  AWS RDS --> Backend: User data
  Backend --> Frontend: Token [color: purple]
}
else [label: invalid credentials, color: red] {
  Backend --> Frontend: Error [color: red]
}
deactivate Frontend

// Chat Flow
Frontend > Backend: "POST /chat/start" [color: blue]
activate Frontend
Backend > AWS RDS: Create conversation [color: orange]
AWS RDS --> Backend: Conversation ID
Backend --> Frontend: Conversation ID [color: blue]
deactivate Frontend

Frontend > Socket.io Server [icon: cloud]: join-room [color: green]
Socket.io Server --> Frontend: "user-online" [color: green]

Frontend > Socket.io Server: "send-message" [color: green]
activate Frontend
Socket.io Server > Backend: Save message [color: orange]
Backend > AWS RDS: Store message [color: orange]
AWS RDS --> Backend: Success
Backend --> Socket.io Server: Message saved
Socket.io Server --> Frontend: "get-new-message" [color: green]
deactivate Frontend

// User Interactions
Frontend > Backend: "GET /chat/conversations" [color: blue]
activate Frontend
Backend > AWS RDS: Fetch conversations [color: orange]
AWS RDS --> Backend: Conversations list
Backend --> Frontend: Conversations list [color: blue]
deactivate Frontend

Frontend > Socket.io Server: typing [color: green]
Socket.io Server --> Frontend: "user-typing" [color: green]

Frontend > Backend: "POST /chat/:conversationId/read" [color: blue]
activate Frontend
Backend > AWS RDS: Update read status [color: orange]
AWS RDS --> Backend: Success
Backend --> Frontend: Read status updated [color: blue]
Socket.io Server --> Frontend: "messages-read" [color: green]
deactivate Frontend

// Error Handling
alt [label: network error, color: red] {
  Frontend --> Frontend: Show error message [color: red]
}
else [label: server error, color: red] {
  Backend --> Frontend: Error response [color: red]
}

